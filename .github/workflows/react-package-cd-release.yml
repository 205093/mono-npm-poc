name: react-package-cd-release

on:
  pull_request:
    types: [closed]

jobs:
  parsebranchname:
    if: github.event.pull_request.merged
    name: Parse version and module from branchname
    runs-on: ubuntu-latest
    outputs:
      module: ${{ env.MODULE }}
      version: ${{ env.VERSION }}
    steps:
      - name: Split branchname into module and version
        run: |
          BRANCHNAME=${{ github.event.pull_request.head.ref }}
          # BRANCHNAME=release/al-spinner/0.0.11
          MODULEANDVERSION=${BRANCHNAME#*/}
          MODULE=${MODULEANDVERSION%%/*}
          VERSION=${MODULEANDVERSION##*/}
          echo module: $MODULE
          echo version: $VERSION
          echo MODULE=$MODULE >> $GITHUB_ENV
          echo VERSION=$VERSION >> $GITHUB_ENV

  check:
    needs: parsebranchname
    name: Check if its a react module release
    runs-on: ubuntu-latest
    outputs:
      isreactmodule: ${{ steps.check_files.outputs.files_exists }}
    steps:
      - run: |
          echo module: ${{ needs.parsebranchname.outputs.module }}
          echo version: ${{ needs.parsebranchname.outputs.version }}

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "al-react-components/${{ needs.parsebranchname.outputs.module }}/package.json"

  buildrelease:
    needs: [parsebranchname, check]
    name: Build release
    if: needs.check.outputs.isreactmodule == 'true'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo module: ${{ needs.parsebranchname.outputs.module }}
          echo version: ${{ needs.parsebranchname.outputs.version }}

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"
          cache-dependency-path: "al-react-components/yarn.lock"
          registry-url: 'https://npm.pkg.github.com'
          scope: '@205093'
          always-auth: true

      - name: Install and build
        run: |
          cd al-react-components
          yarn
          yarn workspaces run build
          cd ${{ needs.parsebranchname.outputs.module }}
          npm pack
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
        
      - name: Push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          custom_tag: ${{ needs.parsebranchname.outputs.module }}/v${{ needs.parsebranchname.outputs.version }}
          tag_prefix: ''

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name:  ${{ needs.parsebranchname.outputs.module }}/v${{ needs.parsebranchname.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: "https://github.com/205093/mono-npm-poc/pkgs/npm/${{ needs.parsebranchname.outputs.module }}"
          files: |
            al-react-components/${{ needs.parsebranchname.outputs.module }}/*.tgz